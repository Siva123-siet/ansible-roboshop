- name: configure catalogue component
  hosts: catalogue
  become: yes
  tasks:
  - name: Disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: Enable nodejs:20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: Install nodejs
    ansible.builtin.dnf:
     name: nodejs
     state: present

  - name: creating system user
    ansible.builtin.user:
     name: roboshop
     shell: /sbin/nologin
     home: /app
     system: true

  - name: Create app directory 
    ansible.builtin.file:
     path: /app 
     state: directory

  - name: Downloading catalogue code to tmp directory
    ansible.builtin.get_url:
     url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
     dest: /tmp/catalogue.zip

  - name: Unzipping catalogue code in app directory
    ansible.builtin.unarchive:
     src: /tmp/catalogue.zip
     dest: /app
     remote_src: yes

  - name: Install dependencies
    community.general.npm:
     path: /app

  - name: copying service to catalogue
    ansible.builtin.copy:
     src: catalogue.service
     dest: /etc/systemd/system/catalogue.service

  - name: Reload catalogue service
    ansible.builtin.service:
     name: catalogue 
     state: reloaded

  - name: enable and start catalogue service
    ansible.builtin.service:
     name: catalogue 
     state: started
     enabled: yes

  - name: copying mongorepo to path
    ansible.builtin.copy:
     src: mongo.repo
     dest: /etc/yum.repos.d/mongo.repo

  - name: Installing mongodb-mongosh
    ansible.builtin.dnf:
     name: mongodb-mongosh
     state: present

  - name: loading master data into database-mongodb
    ansible.builtin.shell: 'mongosh --host mongodb.daws-84s.store </app/db/master-data.js'
    register: command_result

  - name: print outcome
    ansible.builtin.debug:
     msg: "{{command_result}}"


     


